/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   nice_nano_v2.dts.pre.tmp
 *
 * Directories with bindings:
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings, /Users/vallyashov/study/keebs/zmk/app/drivers/zephyr/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /connector_a
 *   5   /soc
 *   6   /soc/gpio@50000000
 *   7   /ext-power
 *   8   /keymap_transform_0
 *   9   /soc/gpio@50000300
 *   10  /kscan
 *   11  /soc/interrupt-controller@e000e100
 *   12  /soc/timer@4000a000
 *   13  /sw-pwm
 *   14  /vbatt
 *   15  /behaviors
 *   16  /behaviors/behavior_ext_power
 *   17  /behaviors/behavior_momentary_layer
 *   18  /behaviors/behavior_reset
 *   19  /behaviors/behavior_reset_dfu
 *   20  /behaviors/behavior_rgb_underglow
 *   21  /behaviors/macro_control_mode_press
 *   22  /behaviors/macro_control_mode_release
 *   23  /behaviors/macro_control_mode_tap
 *   24  /behaviors/macro_control_tap_time
 *   25  /behaviors/macro_control_wait_time
 *   26  /behaviors/macro_pause_for_release
 *   27  /cpus
 *   28  /cpus/cpu@0
 *   29  /keymap
 *   30  /behaviors/behavior_key_press
 *   31  /keymap/default_layer
 *   32  /keymap/mac_layer
 *   33  /leds
 *   34  /leds/led_0
 *   35  /soc/adc@40007000
 *   36  /soc/clock@40000000
 *   37  /soc/ecb@4000e000
 *   38  /soc/ficr@10000000
 *   39  /soc/gpiote@40006000
 *   40  /soc/i2c@40003000
 *   41  /soc/i2c@40004000
 *   42  /soc/memory@20000000
 *   43  /soc/pwm@4001c000
 *   44  /soc/pwm@40021000
 *   45  /soc/pwm@40022000
 *   46  /soc/pwm@4002d000
 *   47  /soc/qdec@40012000
 *   48  /soc/qspi@40029000
 *   49  /soc/random@4000d000
 *   50  /soc/rtc@4000b000
 *   51  /soc/rtc@40011000
 *   52  /soc/rtc@40024000
 *   53  /soc/spi@40003000
 *   54  /soc/spi@40004000
 *   55  /soc/spi@40023000
 *   56  /soc/spi@4002f000
 *   57  /soc/temp@4000c000
 *   58  /soc/timer@40008000
 *   59  /soc/timer@40009000
 *   60  /soc/timer@4001a000
 *   61  /soc/timer@4001b000
 *   62  /soc/timer@e000e010
 *   63  /soc/uart@40002000
 *   64  /soc/uart@40028000
 *   65  /soc/uicr@10001000
 *   66  /soc/watchdog@40010000
 *   67  /soc/crypto@5002a000
 *   68  /soc/crypto@5002a000/crypto@5002b000
 *   69  /soc/flash-controller@4001e000
 *   70  /soc/flash-controller@4001e000/flash@0
 *   71  /soc/flash-controller@4001e000/flash@0/partitions
 *   72  /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *   73  /soc/flash-controller@4001e000/flash@0/partitions/partition@26000
 *   74  /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000
 *   75  /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000
 *   76  /soc/usbd@40027000
 *   77  /soc/usbd@40027000/cdc_acm_uart
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_sw_pwm) fn(DT_N_S_connector) fn(DT_N_S_connector_a) fn(DT_N_S_leds) fn(DT_N_S_ext_power) fn(DT_N_S_vbatt) fn(DT_N_S_keymap_transform_0) fn(DT_N_S_kscan) fn(DT_N_S_behaviors) fn(DT_N_S_keymap)

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /connector_a */ \
	5, /* /soc */ \
	7, /* /ext-power */ \
	8, /* /keymap_transform_0 */ \
	10, /* /kscan */ \
	13, /* /sw-pwm */ \
	14, /* /vbatt */ \
	15, /* /behaviors */ \
	27, /* /cpus */ \
	29, /* /keymap */ \
	33, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_nice_nano DT_N

/* Special property macros: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_nice_nano 1
#define DT_N_STATUS_okay 1

/* Generic property macros: */
#define DT_N_P_compatible {"nice,nano"}
#define DT_N_P_compatible_IDX_0 "nice,nano"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Special property macros: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Special property macros: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N
#define DT_N_S_connector_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_arduino_pro_micro DT_N_S_connector
#define DT_N_NODELABEL_pro_micro      DT_N_S_connector
#define DT_N_NODELABEL_pro_micro_d    DT_N_S_connector

/* Special property macros: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_arduino_pro_micro 1
#define DT_N_S_connector_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"arduino-pro-micro"}
#define DT_N_S_connector_P_compatible_IDX_0 "arduino-pro-micro"
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1

/*
 * Devicetree node: /connector_a
 *
 * Node identifier: DT_N_S_connector_a
 */

/* Node's full path: */
#define DT_N_S_connector_a_PATH "/connector_a"

/* Node parent (/) identifier: */
#define DT_N_S_connector_a_PARENT DT_N
#define DT_N_S_connector_a_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_a_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_a_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_a_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_a_EXISTS 1
#define DT_N_INST_1_arduino_pro_micro DT_N_S_connector_a
#define DT_N_NODELABEL_pro_micro_a    DT_N_S_connector_a

/* Special property macros: */
#define DT_N_S_connector_a_REG_NUM 0
#define DT_N_S_connector_a_IRQ_NUM 0
#define DT_N_S_connector_a_COMPAT_MATCHES_arduino_pro_micro 1
#define DT_N_S_connector_a_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_connector_a_P_compatible {"arduino-pro-micro"}
#define DT_N_S_connector_a_P_compatible_IDX_0 "arduino-pro-micro"
#define DT_N_S_connector_a_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_a_P_compatible_LEN 1
#define DT_N_S_connector_a_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_4001e000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_adc_40007000) fn(DT_N_S_soc_S_clock_40000000) fn(DT_N_S_soc_S_ecb_4000e000) fn(DT_N_S_soc_S_uart_40002000) fn(DT_N_S_soc_S_uart_40028000) fn(DT_N_S_soc_S_gpiote_40006000) fn(DT_N_S_soc_S_gpio_50000000) fn(DT_N_S_soc_S_gpio_50000300) fn(DT_N_S_soc_S_i2c_40003000) fn(DT_N_S_soc_S_i2c_40004000) fn(DT_N_S_soc_S_pwm_4001c000) fn(DT_N_S_soc_S_pwm_40021000) fn(DT_N_S_soc_S_pwm_40022000) fn(DT_N_S_soc_S_pwm_4002d000) fn(DT_N_S_soc_S_qdec_40012000) fn(DT_N_S_soc_S_random_4000d000) fn(DT_N_S_soc_S_spi_40003000) fn(DT_N_S_soc_S_spi_40004000) fn(DT_N_S_soc_S_spi_40023000) fn(DT_N_S_soc_S_spi_4002f000) fn(DT_N_S_soc_S_qspi_40029000) fn(DT_N_S_soc_S_rtc_4000b000) fn(DT_N_S_soc_S_rtc_40011000) fn(DT_N_S_soc_S_rtc_40024000) fn(DT_N_S_soc_S_timer_40008000) fn(DT_N_S_soc_S_timer_40009000) fn(DT_N_S_soc_S_timer_4000a000) fn(DT_N_S_soc_S_timer_4001a000) fn(DT_N_S_soc_S_timer_4001b000) fn(DT_N_S_soc_S_temp_4000c000) fn(DT_N_S_soc_S_usbd_40027000) fn(DT_N_S_soc_S_watchdog_40010000) fn(DT_N_S_soc_S_crypto_5002a000) fn(DT_N_S_soc_S_ficr_10000000) fn(DT_N_S_soc_S_uicr_10001000)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	6, /* /soc/gpio@50000000 */ \
	9, /* /soc/gpio@50000300 */ \
	11, /* /soc/interrupt-controller@e000e100 */ \
	12, /* /soc/timer@4000a000 */ \
	35, /* /soc/adc@40007000 */ \
	36, /* /soc/clock@40000000 */ \
	37, /* /soc/ecb@4000e000 */ \
	38, /* /soc/ficr@10000000 */ \
	39, /* /soc/gpiote@40006000 */ \
	40, /* /soc/i2c@40003000 */ \
	41, /* /soc/i2c@40004000 */ \
	42, /* /soc/memory@20000000 */ \
	43, /* /soc/pwm@4001c000 */ \
	44, /* /soc/pwm@40021000 */ \
	45, /* /soc/pwm@40022000 */ \
	46, /* /soc/pwm@4002d000 */ \
	47, /* /soc/qdec@40012000 */ \
	48, /* /soc/qspi@40029000 */ \
	49, /* /soc/random@4000d000 */ \
	50, /* /soc/rtc@4000b000 */ \
	51, /* /soc/rtc@40011000 */ \
	52, /* /soc/rtc@40024000 */ \
	53, /* /soc/spi@40003000 */ \
	54, /* /soc/spi@40004000 */ \
	55, /* /soc/spi@40023000 */ \
	56, /* /soc/spi@4002f000 */ \
	57, /* /soc/temp@4000c000 */ \
	58, /* /soc/timer@40008000 */ \
	59, /* /soc/timer@40009000 */ \
	60, /* /soc/timer@4001a000 */ \
	61, /* /soc/timer@4001b000 */ \
	62, /* /soc/timer@e000e010 */ \
	63, /* /soc/uart@40002000 */ \
	64, /* /soc/uart@40028000 */ \
	65, /* /soc/uicr@10001000 */ \
	66, /* /soc/watchdog@40010000 */ \
	67, /* /soc/crypto@5002a000 */ \
	69, /* /soc/flash-controller@4001e000 */ \
	76, /* /soc/usbd@40027000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_nordic_nrf52840_qiaa DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52840      DT_N_S_soc
#define DT_N_INST_0_nordic_nrf52         DT_N_S_soc
#define DT_N_INST_0_simple_bus           DT_N_S_soc

/* Special property macros: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840_qiaa 1
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52840 1
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf52 1
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"nordic,nRF52840-QIAA", "nordic,nRF52840", "nordic,nRF52", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "nordic,nRF52840-QIAA"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "nordic,nRF52840"
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "nordic,nRF52"
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_3 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_3_EXISTS 1
#define DT_N_S_soc_P_compatible_LEN 4
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000000
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000000
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000000_PATH "/soc/gpio@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpio_50000000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000000_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000000_SUPPORTS_ORDS \
	7, /* /ext-power */ \
	10, /* /kscan */ \
	34, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000000
#define DT_N_NODELABEL_gpio0        DT_N_S_soc_S_gpio_50000000

/* Special property macros: */
#define DT_N_S_soc_S_gpio_50000000_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_ADDRESS 1342178560 /* 0x50000500 */
#define DT_N_S_soc_S_gpio_50000000_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000000_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000000_P_reg {1342177280 /* 0x50000000 */, 512 /* 0x200 */, 1342178560 /* 0x50000500 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2 1342178560
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_label "GPIO_0"
#define DT_N_S_soc_S_gpio_50000000_P_label_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_port 0
#define DT_N_S_soc_S_gpio_50000000_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_ngpios 32
#define DT_N_S_soc_S_gpio_50000000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_status "okay"
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /ext-power
 *
 * Node identifier: DT_N_S_ext_power
 *
 * Binding (compatible = zmk,ext-power-generic):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/zmk,ext-power-generic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ext_power_PATH "/ext-power"

/* Node parent (/) identifier: */
#define DT_N_S_ext_power_PARENT DT_N
#define DT_N_S_ext_power_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_ext_power_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ext_power_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ext_power_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ext_power_EXISTS 1
#define DT_N_INST_0_zmk_ext_power_generic DT_N_S_ext_power

/* Special property macros: */
#define DT_N_S_ext_power_REG_NUM 0
#define DT_N_S_ext_power_IRQ_NUM 0
#define DT_N_S_ext_power_COMPAT_MATCHES_zmk_ext_power_generic 1
#define DT_N_S_ext_power_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_ext_power_P_control_gpios_IDX_0_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_pin 13
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_flags 0
#define DT_N_S_ext_power_P_control_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_ext_power_P_control_gpios_LEN 1
#define DT_N_S_ext_power_P_control_gpios_EXISTS 1
#define DT_N_S_ext_power_P_label "EXT_POWER"
#define DT_N_S_ext_power_P_label_EXISTS 1
#define DT_N_S_ext_power_P_init_delay_ms 50
#define DT_N_S_ext_power_P_init_delay_ms_EXISTS 1

/*
 * Devicetree node: /keymap_transform_0
 *
 * Node identifier: DT_N_S_keymap_transform_0
 *
 * Binding (compatible = zmk,matrix-transform):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/zmk,matrix-transform.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_transform_0_PATH "/keymap_transform_0"

/* Node parent (/) identifier: */
#define DT_N_S_keymap_transform_0_PARENT DT_N
#define DT_N_S_keymap_transform_0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_transform_0_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_transform_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_transform_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_transform_0_EXISTS 1
#define DT_N_INST_0_zmk_matrix_transform DT_N_S_keymap_transform_0
#define DT_N_NODELABEL_default_transform DT_N_S_keymap_transform_0

/* Special property macros: */
#define DT_N_S_keymap_transform_0_REG_NUM 0
#define DT_N_S_keymap_transform_0_IRQ_NUM 0
#define DT_N_S_keymap_transform_0_COMPAT_MATCHES_zmk_matrix_transform 1
#define DT_N_S_keymap_transform_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_transform_0_P_columns 10
#define DT_N_S_keymap_transform_0_P_columns_EXISTS 1
#define DT_N_S_keymap_transform_0_P_rows 5
#define DT_N_S_keymap_transform_0_P_rows_EXISTS 1
#define DT_N_S_keymap_transform_0_P_col_offset 0
#define DT_N_S_keymap_transform_0_P_col_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_row_offset 0
#define DT_N_S_keymap_transform_0_P_row_offset_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map {0 /* 0x0 */, 1 /* 0x1 */, 2 /* 0x2 */, 3 /* 0x3 */, 4 /* 0x4 */, 5 /* 0x5 */, 6 /* 0x6 */, 7 /* 0x7 */, 8 /* 0x8 */, 9 /* 0x9 */, 10 /* 0xa */, 11 /* 0xb */, 256 /* 0x100 */, 257 /* 0x101 */, 258 /* 0x102 */, 259 /* 0x103 */, 260 /* 0x104 */, 261 /* 0x105 */, 262 /* 0x106 */, 263 /* 0x107 */, 264 /* 0x108 */, 265 /* 0x109 */, 266 /* 0x10a */, 267 /* 0x10b */, 512 /* 0x200 */, 513 /* 0x201 */, 514 /* 0x202 */, 515 /* 0x203 */, 516 /* 0x204 */, 517 /* 0x205 */, 518 /* 0x206 */, 519 /* 0x207 */, 520 /* 0x208 */, 521 /* 0x209 */, 522 /* 0x20a */, 523 /* 0x20b */, 769 /* 0x301 */, 770 /* 0x302 */, 775 /* 0x307 */, 776 /* 0x308 */, 1026 /* 0x402 */, 771 /* 0x303 */, 772 /* 0x304 */, 773 /* 0x305 */, 774 /* 0x306 */, 1031 /* 0x407 */, 1027 /* 0x403 */, 1028 /* 0x404 */, 1029 /* 0x405 */, 1030 /* 0x406 */, 1284 /* 0x504 */, 1285 /* 0x505 */}
#define DT_N_S_keymap_transform_0_P_map_IDX_0 0
#define DT_N_S_keymap_transform_0_P_map_IDX_0_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_1 1
#define DT_N_S_keymap_transform_0_P_map_IDX_1_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_2 2
#define DT_N_S_keymap_transform_0_P_map_IDX_2_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_3 3
#define DT_N_S_keymap_transform_0_P_map_IDX_3_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_4 4
#define DT_N_S_keymap_transform_0_P_map_IDX_4_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_5 5
#define DT_N_S_keymap_transform_0_P_map_IDX_5_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_6 6
#define DT_N_S_keymap_transform_0_P_map_IDX_6_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_7 7
#define DT_N_S_keymap_transform_0_P_map_IDX_7_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_8 8
#define DT_N_S_keymap_transform_0_P_map_IDX_8_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_9 9
#define DT_N_S_keymap_transform_0_P_map_IDX_9_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_10 10
#define DT_N_S_keymap_transform_0_P_map_IDX_10_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_11 11
#define DT_N_S_keymap_transform_0_P_map_IDX_11_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_12 256
#define DT_N_S_keymap_transform_0_P_map_IDX_12_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_13 257
#define DT_N_S_keymap_transform_0_P_map_IDX_13_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_14 258
#define DT_N_S_keymap_transform_0_P_map_IDX_14_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_15 259
#define DT_N_S_keymap_transform_0_P_map_IDX_15_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_16 260
#define DT_N_S_keymap_transform_0_P_map_IDX_16_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_17 261
#define DT_N_S_keymap_transform_0_P_map_IDX_17_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_18 262
#define DT_N_S_keymap_transform_0_P_map_IDX_18_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_19 263
#define DT_N_S_keymap_transform_0_P_map_IDX_19_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_20 264
#define DT_N_S_keymap_transform_0_P_map_IDX_20_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_21 265
#define DT_N_S_keymap_transform_0_P_map_IDX_21_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_22 266
#define DT_N_S_keymap_transform_0_P_map_IDX_22_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_23 267
#define DT_N_S_keymap_transform_0_P_map_IDX_23_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_24 512
#define DT_N_S_keymap_transform_0_P_map_IDX_24_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_25 513
#define DT_N_S_keymap_transform_0_P_map_IDX_25_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_26 514
#define DT_N_S_keymap_transform_0_P_map_IDX_26_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_27 515
#define DT_N_S_keymap_transform_0_P_map_IDX_27_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_28 516
#define DT_N_S_keymap_transform_0_P_map_IDX_28_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_29 517
#define DT_N_S_keymap_transform_0_P_map_IDX_29_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_30 518
#define DT_N_S_keymap_transform_0_P_map_IDX_30_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_31 519
#define DT_N_S_keymap_transform_0_P_map_IDX_31_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_32 520
#define DT_N_S_keymap_transform_0_P_map_IDX_32_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_33 521
#define DT_N_S_keymap_transform_0_P_map_IDX_33_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_34 522
#define DT_N_S_keymap_transform_0_P_map_IDX_34_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_35 523
#define DT_N_S_keymap_transform_0_P_map_IDX_35_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_36 769
#define DT_N_S_keymap_transform_0_P_map_IDX_36_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_37 770
#define DT_N_S_keymap_transform_0_P_map_IDX_37_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_38 775
#define DT_N_S_keymap_transform_0_P_map_IDX_38_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_39 776
#define DT_N_S_keymap_transform_0_P_map_IDX_39_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_40 1026
#define DT_N_S_keymap_transform_0_P_map_IDX_40_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_41 771
#define DT_N_S_keymap_transform_0_P_map_IDX_41_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_42 772
#define DT_N_S_keymap_transform_0_P_map_IDX_42_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_43 773
#define DT_N_S_keymap_transform_0_P_map_IDX_43_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_44 774
#define DT_N_S_keymap_transform_0_P_map_IDX_44_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_45 1031
#define DT_N_S_keymap_transform_0_P_map_IDX_45_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_46 1027
#define DT_N_S_keymap_transform_0_P_map_IDX_46_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_47 1028
#define DT_N_S_keymap_transform_0_P_map_IDX_47_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_48 1029
#define DT_N_S_keymap_transform_0_P_map_IDX_48_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_49 1030
#define DT_N_S_keymap_transform_0_P_map_IDX_49_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_50 1284
#define DT_N_S_keymap_transform_0_P_map_IDX_50_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_IDX_51 1285
#define DT_N_S_keymap_transform_0_P_map_IDX_51_EXISTS 1
#define DT_N_S_keymap_transform_0_P_map_LEN 52
#define DT_N_S_keymap_transform_0_P_map_EXISTS 1

/*
 * Devicetree node: /soc/gpio@50000300
 *
 * Node identifier: DT_N_S_soc_S_gpio_50000300
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_50000300_PATH "/soc/gpio@50000300"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_50000300_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpio_50000300_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_50000300_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_50000300_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_50000300_SUPPORTS_ORDS \
	10, /* /kscan */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_50000300_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpio DT_N_S_soc_S_gpio_50000300
#define DT_N_NODELABEL_gpio1        DT_N_S_soc_S_gpio_50000300

/* Special property macros: */
#define DT_N_S_soc_S_gpio_50000300_REG_NUM 2
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_ADDRESS 1342178048 /* 0x50000300 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_ADDRESS 1342179328 /* 0x50000800 */
#define DT_N_S_soc_S_gpio_50000300_REG_IDX_1_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_50000300_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_50000300_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_50000300_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_50000300_P_reg {1342178048 /* 0x50000300 */, 512 /* 0x200 */, 1342179328 /* 0x50000800 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0 1342178048
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1 512
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2 1342179328
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3 768
#define DT_N_S_soc_S_gpio_50000300_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_label "GPIO_1"
#define DT_N_S_soc_S_gpio_50000300_P_label_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_port 1
#define DT_N_S_soc_S_gpio_50000300_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_50000300_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_ngpios 16
#define DT_N_S_soc_S_gpio_50000300_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_status "okay"
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_50000300_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_50000300_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_50000300_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_50000300_P_compatible_EXISTS 1

/*
 * Devicetree node: /kscan
 *
 * Node identifier: DT_N_S_kscan
 *
 * Binding (compatible = zmk,kscan-gpio-matrix):
 *   /Users/vallyashov/study/keebs/zmk/app/drivers/zephyr/dts/bindings/kscan/zmk,kscan-gpio-matrix.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_kscan_PATH "/kscan"

/* Node parent (/) identifier: */
#define DT_N_S_kscan_PARENT DT_N
#define DT_N_S_kscan_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_kscan_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_kscan_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/gpio@50000000 */ \
	9, /* /soc/gpio@50000300 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_kscan_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_kscan_EXISTS 1
#define DT_N_INST_0_zmk_kscan_gpio_matrix DT_N_S_kscan
#define DT_N_NODELABEL_kscan0             DT_N_S_kscan

/* Special property macros: */
#define DT_N_S_kscan_REG_NUM 0
#define DT_N_S_kscan_IRQ_NUM 0
#define DT_N_S_kscan_COMPAT_MATCHES_zmk_kscan_gpio_matrix 1
#define DT_N_S_kscan_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_kscan_P_row_gpios_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_pin 9
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_pin 10
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_pin 11
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_pin 13
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_4_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_4_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_row_gpios_IDX_4_VAL_pin 15
#define DT_N_S_kscan_P_row_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_4_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_5_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_5_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_row_gpios_IDX_5_VAL_pin 2
#define DT_N_S_kscan_P_row_gpios_IDX_5_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_IDX_5_VAL_flags 32
#define DT_N_S_kscan_P_row_gpios_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_row_gpios_LEN 6
#define DT_N_S_kscan_P_row_gpios_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_pin 22
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_pin 24
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_pin 0
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_pin 11
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_pin 4
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_5_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_5_PH DT_N_S_soc_S_gpio_50000300
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_pin 6
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_pin_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_flags 0
#define DT_N_S_kscan_P_col_gpios_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_kscan_P_col_gpios_LEN 6
#define DT_N_S_kscan_P_col_gpios_EXISTS 1
#define DT_N_S_kscan_P_debounce_press_ms 30
#define DT_N_S_kscan_P_debounce_press_ms_EXISTS 1
#define DT_N_S_kscan_P_debounce_release_ms 30
#define DT_N_S_kscan_P_debounce_release_ms_EXISTS 1
#define DT_N_S_kscan_P_debounce_scan_period_ms 1
#define DT_N_S_kscan_P_debounce_scan_period_ms_EXISTS 1
#define DT_N_S_kscan_P_poll_period_ms 10
#define DT_N_S_kscan_P_poll_period_ms_EXISTS 1
#define DT_N_S_kscan_P_diode_direction "col2row"
#define DT_N_S_kscan_P_diode_direction_ENUM_IDX 1
#define DT_N_S_kscan_P_diode_direction_ENUM_TOKEN col2row
#define DT_N_S_kscan_P_diode_direction_ENUM_UPPER_TOKEN COL2ROW
#define DT_N_S_kscan_P_diode_direction_EXISTS 1
#define DT_N_S_kscan_P_label "KSCAN"
#define DT_N_S_kscan_P_label_EXISTS 1
#define DT_N_S_kscan_P_compatible {"zmk,kscan-gpio-matrix"}
#define DT_N_S_kscan_P_compatible_IDX_0 "zmk,kscan-gpio-matrix"
#define DT_N_S_kscan_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_kscan_P_compatible_LEN 1
#define DT_N_S_kscan_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	12, /* /soc/timer@4000a000 */ \
	35, /* /soc/adc@40007000 */ \
	36, /* /soc/clock@40000000 */ \
	37, /* /soc/ecb@4000e000 */ \
	39, /* /soc/gpiote@40006000 */ \
	40, /* /soc/i2c@40003000 */ \
	41, /* /soc/i2c@40004000 */ \
	43, /* /soc/pwm@4001c000 */ \
	44, /* /soc/pwm@40021000 */ \
	45, /* /soc/pwm@40022000 */ \
	46, /* /soc/pwm@4002d000 */ \
	47, /* /soc/qdec@40012000 */ \
	48, /* /soc/qspi@40029000 */ \
	49, /* /soc/random@4000d000 */ \
	50, /* /soc/rtc@4000b000 */ \
	51, /* /soc/rtc@40011000 */ \
	52, /* /soc/rtc@40024000 */ \
	53, /* /soc/spi@40003000 */ \
	54, /* /soc/spi@40004000 */ \
	55, /* /soc/spi@40023000 */ \
	56, /* /soc/spi@4002f000 */ \
	57, /* /soc/temp@4000c000 */ \
	58, /* /soc/timer@40008000 */ \
	59, /* /soc/timer@40009000 */ \
	60, /* /soc/timer@4001a000 */ \
	61, /* /soc/timer@4001b000 */ \
	63, /* /soc/uart@40002000 */ \
	64, /* /soc/uart@40028000 */ \
	66, /* /soc/watchdog@40010000 */ \
	68, /* /soc/crypto@5002a000/crypto@5002b000 */ \
	76, /* /soc/usbd@40027000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Special property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timer@4000a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4000a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4000a000_PATH "/soc/timer@4000a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4000a000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_4000a000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4000a000_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4000a000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4000a000_SUPPORTS_ORDS \
	13, /* /sw-pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4000a000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_timer DT_N_S_soc_S_timer_4000a000
#define DT_N_NODELABEL_timer2        DT_N_S_soc_S_timer_4000a000

/* Special property macros: */
#define DT_N_S_soc_S_timer_4000a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_ADDRESS 1073782784 /* 0x4000a000 */
#define DT_N_S_soc_S_timer_4000a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4000a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4000a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4000a000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4000a000_P_reg {1073782784 /* 0x4000a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0 1073782784
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4000a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_cc_num 4
#define DT_N_S_soc_S_timer_4000a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts {10 /* 0xa */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_label "TIMER_2"
#define DT_N_S_soc_S_timer_4000a000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4000a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_status "okay"
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_4000a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4000a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4000a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4000a000_P_compatible_EXISTS 1

/*
 * Devicetree node: /sw-pwm
 *
 * Node identifier: DT_N_S_sw_pwm
 *
 * Binding (compatible = nordic,nrf-sw-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-sw-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sw_pwm_PATH "/sw-pwm"

/* Node parent (/) identifier: */
#define DT_N_S_sw_pwm_PARENT DT_N
#define DT_N_S_sw_pwm_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_sw_pwm_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sw_pwm_REQUIRES_ORDS \
	0, /* / */ \
	12, /* /soc/timer@4000a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sw_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sw_pwm_EXISTS 1
#define DT_N_INST_0_nordic_nrf_sw_pwm DT_N_S_sw_pwm
#define DT_N_NODELABEL_sw_pwm         DT_N_S_sw_pwm

/* Special property macros: */
#define DT_N_S_sw_pwm_REG_NUM 0
#define DT_N_S_sw_pwm_IRQ_NUM 0
#define DT_N_S_sw_pwm_COMPAT_MATCHES_nordic_nrf_sw_pwm 1
#define DT_N_S_sw_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_sw_pwm_P_generator_IDX_0_PH DT_N_S_soc_S_timer_4000a000
#define DT_N_S_sw_pwm_P_generator_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_generator_LEN 1
#define DT_N_S_sw_pwm_P_generator_EXISTS 1
#define DT_N_S_sw_pwm_P_channel_count 3
#define DT_N_S_sw_pwm_P_channel_count_EXISTS 1
#define DT_N_S_sw_pwm_P_clock_prescaler 0
#define DT_N_S_sw_pwm_P_clock_prescaler_EXISTS 1
#define DT_N_S_sw_pwm_P_ppi_base 0
#define DT_N_S_sw_pwm_P_ppi_base_EXISTS 1
#define DT_N_S_sw_pwm_P_gpiote_base 0
#define DT_N_S_sw_pwm_P_gpiote_base_EXISTS 1
#define DT_N_S_sw_pwm_P_label "SW_PWM"
#define DT_N_S_sw_pwm_P_label_EXISTS 1
#define DT_N_S_sw_pwm_P_status "disabled"
#define DT_N_S_sw_pwm_P_status_ENUM_IDX 2
#define DT_N_S_sw_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible {"nordic,nrf-sw-pwm"}
#define DT_N_S_sw_pwm_P_compatible_IDX_0 "nordic,nrf-sw-pwm"
#define DT_N_S_sw_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible_LEN 1
#define DT_N_S_sw_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /vbatt
 *
 * Node identifier: DT_N_S_vbatt
 *
 * Binding (compatible = zmk,battery-nrf-vddh):
 *   /Users/vallyashov/study/keebs/zmk/app/drivers/zephyr/dts/bindings/sensor/zmk,battery-nrf-vddh.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vbatt_PATH "/vbatt"

/* Node parent (/) identifier: */
#define DT_N_S_vbatt_PARENT DT_N
#define DT_N_S_vbatt_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_vbatt_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vbatt_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vbatt_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vbatt_EXISTS 1
#define DT_N_INST_0_zmk_battery_nrf_vddh DT_N_S_vbatt

/* Special property macros: */
#define DT_N_S_vbatt_REG_NUM 0
#define DT_N_S_vbatt_IRQ_NUM 0
#define DT_N_S_vbatt_COMPAT_MATCHES_zmk_battery_nrf_vddh 1
#define DT_N_S_vbatt_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_vbatt_P_label "BATTERY"
#define DT_N_S_vbatt_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors
 *
 * Node identifier: DT_N_S_behaviors
 */

/* Node's full path: */
#define DT_N_S_behaviors_PATH "/behaviors"

/* Node parent (/) identifier: */
#define DT_N_S_behaviors_PARENT DT_N
#define DT_N_S_behaviors_FOREACH_CHILD(fn) fn(DT_N_S_behaviors_S_behavior_key_press) fn(DT_N_S_behaviors_S_behavior_momentary_layer) fn(DT_N_S_behaviors_S_behavior_reset) fn(DT_N_S_behaviors_S_behavior_reset_dfu) fn(DT_N_S_behaviors_S_behavior_rgb_underglow) fn(DT_N_S_behaviors_S_behavior_ext_power) fn(DT_N_S_behaviors_S_macro_control_mode_tap) fn(DT_N_S_behaviors_S_macro_control_mode_press) fn(DT_N_S_behaviors_S_macro_control_mode_release) fn(DT_N_S_behaviors_S_macro_control_tap_time) fn(DT_N_S_behaviors_S_macro_control_wait_time) fn(DT_N_S_behaviors_S_macro_pause_for_release)

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_SUPPORTS_ORDS \
	16, /* /behaviors/behavior_ext_power */ \
	17, /* /behaviors/behavior_momentary_layer */ \
	18, /* /behaviors/behavior_reset */ \
	19, /* /behaviors/behavior_reset_dfu */ \
	20, /* /behaviors/behavior_rgb_underglow */ \
	21, /* /behaviors/macro_control_mode_press */ \
	22, /* /behaviors/macro_control_mode_release */ \
	23, /* /behaviors/macro_control_mode_tap */ \
	24, /* /behaviors/macro_control_tap_time */ \
	25, /* /behaviors/macro_control_wait_time */ \
	26, /* /behaviors/macro_pause_for_release */ \
	30, /* /behaviors/behavior_key_press */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_EXISTS 1

/* Special property macros: */
#define DT_N_S_behaviors_REG_NUM 0
#define DT_N_S_behaviors_IRQ_NUM 0
#define DT_N_S_behaviors_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /behaviors/behavior_ext_power
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_ext_power
 *
 * Binding (compatible = zmk,behavior-ext-power):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/behaviors/zmk,behavior-ext-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_ext_power_PATH "/behaviors/behavior_ext_power"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_ext_power_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_ext_power_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_ext_power_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_ext_power_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_ext_power_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_ext_power_EXISTS 1
#define DT_N_INST_0_zmk_behavior_ext_power DT_N_S_behaviors_S_behavior_ext_power
#define DT_N_NODELABEL_ext_power           DT_N_S_behaviors_S_behavior_ext_power

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_ext_power_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_ext_power_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_ext_power_COMPAT_MATCHES_zmk_behavior_ext_power 1
#define DT_N_S_behaviors_S_behavior_ext_power_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_ext_power_P_label "EXTPOWER"
#define DT_N_S_behaviors_S_behavior_ext_power_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_momentary_layer
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_momentary_layer
 *
 * Binding (compatible = zmk,behavior-momentary-layer):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/behaviors/zmk,behavior-momentary-layer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_PATH "/behaviors/behavior_momentary_layer"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_momentary_layer_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_EXISTS 1
#define DT_N_INST_0_zmk_behavior_momentary_layer DT_N_S_behaviors_S_behavior_momentary_layer
#define DT_N_NODELABEL_mo                        DT_N_S_behaviors_S_behavior_momentary_layer

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_momentary_layer_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_momentary_layer_COMPAT_MATCHES_zmk_behavior_momentary_layer 1
#define DT_N_S_behaviors_S_behavior_momentary_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label "MO"
#define DT_N_S_behaviors_S_behavior_momentary_layer_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_reset
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_reset
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_reset_PATH "/behaviors/behavior_reset"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_reset_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_reset_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_reset_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_reset_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_reset_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_reset_EXISTS 1
#define DT_N_INST_0_zmk_behavior_reset DT_N_S_behaviors_S_behavior_reset
#define DT_N_NODELABEL_reset           DT_N_S_behaviors_S_behavior_reset

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_reset_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_behavior_reset_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_reset_P_type 0
#define DT_N_S_behaviors_S_behavior_reset_P_type_EXISTS 1
#define DT_N_S_behaviors_S_behavior_reset_P_label "RESET"
#define DT_N_S_behaviors_S_behavior_reset_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_reset_dfu
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_reset_dfu
 *
 * Binding (compatible = zmk,behavior-reset):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/behaviors/zmk,behavior-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_PATH "/behaviors/behavior_reset_dfu"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_reset_dfu_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_EXISTS 1
#define DT_N_INST_1_zmk_behavior_reset DT_N_S_behaviors_S_behavior_reset_dfu
#define DT_N_NODELABEL_bootloader      DT_N_S_behaviors_S_behavior_reset_dfu

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_dfu_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_reset_dfu_COMPAT_MATCHES_zmk_behavior_reset 1
#define DT_N_S_behaviors_S_behavior_reset_dfu_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_type 87
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_type_EXISTS 1
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label "BOOTLOAD"
#define DT_N_S_behaviors_S_behavior_reset_dfu_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_rgb_underglow
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_rgb_underglow
 *
 * Binding (compatible = zmk,behavior-rgb-underglow):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/behaviors/zmk,behavior-rgb-underglow.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_PATH "/behaviors/behavior_rgb_underglow"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_rgb_underglow_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_EXISTS 1
#define DT_N_INST_0_zmk_behavior_rgb_underglow DT_N_S_behaviors_S_behavior_rgb_underglow
#define DT_N_NODELABEL_rgb_ug                  DT_N_S_behaviors_S_behavior_rgb_underglow

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_rgb_underglow_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_rgb_underglow_COMPAT_MATCHES_zmk_behavior_rgb_underglow 1
#define DT_N_S_behaviors_S_behavior_rgb_underglow_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label "RGB_UG"
#define DT_N_S_behaviors_S_behavior_rgb_underglow_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_mode_press
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_mode_press
 *
 * Binding (compatible = zmk,macro-control-mode-press):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/macros/zmk,macro-control-mode-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_mode_press_PATH "/behaviors/macro_control_mode_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_mode_press_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_mode_press_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_mode_press_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_mode_press_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_mode_press_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_mode_press_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_press DT_N_S_behaviors_S_macro_control_mode_press
#define DT_N_NODELABEL_macro_press               DT_N_S_behaviors_S_macro_control_mode_press

/* Special property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_press_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_press_COMPAT_MATCHES_zmk_macro_control_mode_press 1
#define DT_N_S_behaviors_S_macro_control_mode_press_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_press_P_label "MAC_PRESS"
#define DT_N_S_behaviors_S_macro_control_mode_press_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_mode_release
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_mode_release
 *
 * Binding (compatible = zmk,macro-control-mode-release):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/macros/zmk,macro-control-mode-release.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_mode_release_PATH "/behaviors/macro_control_mode_release"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_mode_release_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_mode_release_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_mode_release_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_mode_release_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_mode_release_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_mode_release_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_release DT_N_S_behaviors_S_macro_control_mode_release
#define DT_N_NODELABEL_macro_release               DT_N_S_behaviors_S_macro_control_mode_release

/* Special property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_release_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_release_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_release_COMPAT_MATCHES_zmk_macro_control_mode_release 1
#define DT_N_S_behaviors_S_macro_control_mode_release_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_release_P_label "MAC_REL"
#define DT_N_S_behaviors_S_macro_control_mode_release_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_mode_tap
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_mode_tap
 *
 * Binding (compatible = zmk,macro-control-mode-tap):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/macros/zmk,macro-control-mode-tap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_PATH "/behaviors/macro_control_mode_tap"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_mode_tap_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_mode_tap DT_N_S_behaviors_S_macro_control_mode_tap
#define DT_N_NODELABEL_macro_tap               DT_N_S_behaviors_S_macro_control_mode_tap

/* Special property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_tap_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_mode_tap_COMPAT_MATCHES_zmk_macro_control_mode_tap 1
#define DT_N_S_behaviors_S_macro_control_mode_tap_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_mode_tap_P_label "MAC_TAP"
#define DT_N_S_behaviors_S_macro_control_mode_tap_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_tap_time
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_tap_time
 *
 * Binding (compatible = zmk,macro-control-tap-time):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/macros/zmk,macro-control-tap-time.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_tap_time_PATH "/behaviors/macro_control_tap_time"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_tap_time_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_tap_time_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_tap_time_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_tap_time_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_tap_time_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_tap_time_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_tap_time DT_N_S_behaviors_S_macro_control_tap_time
#define DT_N_NODELABEL_macro_tap_time          DT_N_S_behaviors_S_macro_control_tap_time

/* Special property macros: */
#define DT_N_S_behaviors_S_macro_control_tap_time_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_tap_time_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_tap_time_COMPAT_MATCHES_zmk_macro_control_tap_time 1
#define DT_N_S_behaviors_S_macro_control_tap_time_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_tap_time_P_label "MAC_TAP_TIME"
#define DT_N_S_behaviors_S_macro_control_tap_time_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_control_wait_time
 *
 * Node identifier: DT_N_S_behaviors_S_macro_control_wait_time
 *
 * Binding (compatible = zmk,macro-control-wait-time):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/macros/zmk,macro-control-wait-time.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_control_wait_time_PATH "/behaviors/macro_control_wait_time"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_control_wait_time_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_control_wait_time_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_control_wait_time_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_control_wait_time_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_control_wait_time_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_control_wait_time_EXISTS 1
#define DT_N_INST_0_zmk_macro_control_wait_time DT_N_S_behaviors_S_macro_control_wait_time
#define DT_N_NODELABEL_macro_wait_time          DT_N_S_behaviors_S_macro_control_wait_time

/* Special property macros: */
#define DT_N_S_behaviors_S_macro_control_wait_time_REG_NUM 0
#define DT_N_S_behaviors_S_macro_control_wait_time_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_control_wait_time_COMPAT_MATCHES_zmk_macro_control_wait_time 1
#define DT_N_S_behaviors_S_macro_control_wait_time_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_control_wait_time_P_label "MAC_WAIT_TIME"
#define DT_N_S_behaviors_S_macro_control_wait_time_P_label_EXISTS 1

/*
 * Devicetree node: /behaviors/macro_pause_for_release
 *
 * Node identifier: DT_N_S_behaviors_S_macro_pause_for_release
 *
 * Binding (compatible = zmk,macro-pause-for-release):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/macros/zmk,macro-pause-for-release.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PATH "/behaviors/macro_pause_for_release"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_macro_pause_for_release_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_macro_pause_for_release_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_macro_pause_for_release_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_macro_pause_for_release_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_macro_pause_for_release_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_macro_pause_for_release_EXISTS 1
#define DT_N_INST_0_zmk_macro_pause_for_release DT_N_S_behaviors_S_macro_pause_for_release
#define DT_N_NODELABEL_macro_pause_for_release  DT_N_S_behaviors_S_macro_pause_for_release

/* Special property macros: */
#define DT_N_S_behaviors_S_macro_pause_for_release_REG_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_IRQ_NUM 0
#define DT_N_S_behaviors_S_macro_pause_for_release_COMPAT_MATCHES_zmk_macro_pause_for_release 1
#define DT_N_S_behaviors_S_macro_pause_for_release_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_macro_pause_for_release_P_label "MAC_WAIT_REL"
#define DT_N_S_behaviors_S_macro_pause_for_release_P_label_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	28, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Special property macros: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	27, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1

/*
 * Devicetree node: /keymap
 *
 * Node identifier: DT_N_S_keymap
 *
 * Binding (compatible = zmk,keymap):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_PATH "/keymap"

/* Node parent (/) identifier: */
#define DT_N_S_keymap_PARENT DT_N
#define DT_N_S_keymap_FOREACH_CHILD(fn) fn(DT_N_S_keymap_S_default_layer) fn(DT_N_S_keymap_S_mac_layer)

/* Node's dependency ordinal: */
#define DT_N_S_keymap_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_SUPPORTS_ORDS \
	31, /* /keymap/default_layer */ \
	32, /* /keymap/mac_layer */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_EXISTS 1
#define DT_N_INST_0_zmk_keymap DT_N_S_keymap

/* Special property macros: */
#define DT_N_S_keymap_REG_NUM 0
#define DT_N_S_keymap_IRQ_NUM 0
#define DT_N_S_keymap_COMPAT_MATCHES_zmk_keymap 1
#define DT_N_S_keymap_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_P_compatible {"zmk,keymap"}
#define DT_N_S_keymap_P_compatible_IDX_0 "zmk,keymap"
#define DT_N_S_keymap_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_keymap_P_compatible_LEN 1
#define DT_N_S_keymap_P_compatible_EXISTS 1

/*
 * Devicetree node: /behaviors/behavior_key_press
 *
 * Node identifier: DT_N_S_behaviors_S_behavior_key_press
 *
 * Binding (compatible = zmk,behavior-key-press):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/behaviors/zmk,behavior-key-press.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_behaviors_S_behavior_key_press_PATH "/behaviors/behavior_key_press"

/* Node parent (/behaviors) identifier: */
#define DT_N_S_behaviors_S_behavior_key_press_PARENT DT_N_S_behaviors
#define DT_N_S_behaviors_S_behavior_key_press_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_behaviors_S_behavior_key_press_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_behaviors_S_behavior_key_press_REQUIRES_ORDS \
	15, /* /behaviors */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_behaviors_S_behavior_key_press_SUPPORTS_ORDS \
	31, /* /keymap/default_layer */ \
	32, /* /keymap/mac_layer */

/* Existence and alternate IDs: */
#define DT_N_S_behaviors_S_behavior_key_press_EXISTS 1
#define DT_N_INST_0_zmk_behavior_key_press DT_N_S_behaviors_S_behavior_key_press
#define DT_N_NODELABEL_cp                  DT_N_S_behaviors_S_behavior_key_press
#define DT_N_NODELABEL_kp                  DT_N_S_behaviors_S_behavior_key_press

/* Special property macros: */
#define DT_N_S_behaviors_S_behavior_key_press_REG_NUM 0
#define DT_N_S_behaviors_S_behavior_key_press_IRQ_NUM 0
#define DT_N_S_behaviors_S_behavior_key_press_COMPAT_MATCHES_zmk_behavior_key_press 1
#define DT_N_S_behaviors_S_behavior_key_press_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_behaviors_S_behavior_key_press_P_label "KEY_PRESS"
#define DT_N_S_behaviors_S_behavior_key_press_P_label_EXISTS 1

/*
 * Devicetree node: /keymap/default_layer
 *
 * Node identifier: DT_N_S_keymap_S_default_layer
 *
 * Binding (compatible = zmk,keymap):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_default_layer_PATH "/keymap/default_layer"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_default_layer_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_default_layer_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_default_layer_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_default_layer_REQUIRES_ORDS \
	29, /* /keymap */ \
	30, /* /behaviors/behavior_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_default_layer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_default_layer_EXISTS 1

/* Special property macros: */
#define DT_N_S_keymap_S_default_layer_REG_NUM 0
#define DT_N_S_keymap_S_default_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_default_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_0_VAL_param1 458793
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_1_VAL_param1 458772
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_2_VAL_param1 458778
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_3_VAL_param1 458760
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_4_VAL_param1 458773
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_5_VAL_param1 458775
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_6_VAL_param1 458780
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_7_VAL_param1 458776
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_8_VAL_param1 458764
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_9_VAL_param1 458770
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_10_VAL_param1 458771
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_11_VAL_param1 458795
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_12_VAL_param1 458756
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_13_VAL_param1 458774
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_14_VAL_param1 458759
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_15_VAL_param1 458761
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_16_VAL_param1 458762
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_17_VAL_param1 458763
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_18_VAL_param1 458765
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_19_VAL_param1 458766
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_20_VAL_param1 458767
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_21_VAL_param1 458803
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_22_VAL_param1 458981
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_23_VAL_param1 458781
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_24_VAL_param1 458779
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_25_VAL_param1 458758
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_26_VAL_param1 458777
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_27_VAL_param1 458757
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_28_VAL_param1 458769
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_29_VAL_param1 458768
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_30_VAL_param1 458806
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_31_VAL_param1 458807
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_32_VAL_param1 458808
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_33_VAL_param1 458832
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_34_VAL_param1 458831
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_35_VAL_param1 458833
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_36_VAL_param1 458834
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_37_VAL_param1 458794
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_38_VAL_param1 458793
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_39_VAL_param1 458828
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_40_VAL_param1 458792
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_41_VAL_param1 458796
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_42_VAL_param1 458805
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_42_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_43_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_43_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_43_VAL_param1 458794
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_43_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_44_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_44_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_44_VAL_param1 458976
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_44_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_45_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_45_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_45_VAL_param1 458978
#define DT_N_S_keymap_S_default_layer_P_bindings_IDX_45_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_default_layer_P_bindings_LEN 46
#define DT_N_S_keymap_S_default_layer_P_bindings_EXISTS 1

/*
 * Devicetree node: /keymap/mac_layer
 *
 * Node identifier: DT_N_S_keymap_S_mac_layer
 *
 * Binding (compatible = zmk,keymap):
 *   /Users/vallyashov/study/keebs/zmk/app/dts/bindings/zmk,keymap.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_keymap_S_mac_layer_PATH "/keymap/mac_layer"

/* Node parent (/keymap) identifier: */
#define DT_N_S_keymap_S_mac_layer_PARENT DT_N_S_keymap
#define DT_N_S_keymap_S_mac_layer_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_keymap_S_mac_layer_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_keymap_S_mac_layer_REQUIRES_ORDS \
	29, /* /keymap */ \
	30, /* /behaviors/behavior_key_press */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_keymap_S_mac_layer_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_keymap_S_mac_layer_EXISTS 1

/* Special property macros: */
#define DT_N_S_keymap_S_mac_layer_REG_NUM 0
#define DT_N_S_keymap_S_mac_layer_IRQ_NUM 0
#define DT_N_S_keymap_S_mac_layer_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_0_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_0_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_0_VAL_param1 458772
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_0_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_1_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_1_VAL_param1 458778
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_1_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_2_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_2_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_2_VAL_param1 458760
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_2_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_3_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_3_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_3_VAL_param1 458773
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_3_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_4_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_4_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_4_VAL_param1 458775
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_4_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_5_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_5_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_5_VAL_param1 458780
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_5_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_6_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_6_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_6_VAL_param1 458776
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_6_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_7_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_7_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_7_VAL_param1 458764
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_7_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_8_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_8_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_8_VAL_param1 458770
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_8_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_9_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_9_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_9_VAL_param1 458771
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_9_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_10_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_10_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_10_VAL_param1 458756
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_10_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_11_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_11_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_11_VAL_param1 458774
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_11_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_12_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_12_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_12_VAL_param1 458759
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_12_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_13_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_13_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_13_VAL_param1 458761
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_13_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_14_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_14_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_14_VAL_param1 458762
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_14_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_15_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_15_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_15_VAL_param1 458763
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_15_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_16_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_16_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_16_VAL_param1 458765
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_16_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_17_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_17_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_17_VAL_param1 458766
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_17_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_18_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_18_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_18_VAL_param1 458767
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_18_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_19_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_19_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_19_VAL_param1 458803
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_19_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_20_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_20_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_20_VAL_param1 458781
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_20_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_21_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_21_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_21_VAL_param1 458779
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_21_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_22_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_22_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_22_VAL_param1 458758
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_22_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_23_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_23_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_23_VAL_param1 458777
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_23_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_24_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_24_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_24_VAL_param1 458757
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_24_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_25_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_25_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_25_VAL_param1 458769
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_25_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_26_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_26_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_26_VAL_param1 458768
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_26_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_27_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_27_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_27_VAL_param1 458806
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_27_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_28_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_28_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_28_VAL_param1 458807
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_28_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_29_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_29_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_29_VAL_param1 458808
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_29_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_30_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_30_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_30_VAL_param1 458832
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_30_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_31_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_31_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_31_VAL_param1 458831
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_31_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_32_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_32_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_32_VAL_param1 458833
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_32_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_33_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_33_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_33_VAL_param1 458834
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_33_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_34_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_34_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_34_VAL_param1 458794
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_34_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_35_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_35_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_35_VAL_param1 458793
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_35_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_36_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_36_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_36_VAL_param1 458828
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_36_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_37_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_37_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_37_VAL_param1 458792
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_37_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_38_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_38_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_38_VAL_param1 458796
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_38_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_39_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_39_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_39_VAL_param1 458805
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_39_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_40_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_40_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_40_VAL_param1 458794
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_40_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_41_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_41_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_41_VAL_param1 458976
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_41_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_42_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_42_PH DT_N_S_behaviors_S_behavior_key_press
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_42_VAL_param1 458978
#define DT_N_S_keymap_S_mac_layer_P_bindings_IDX_42_VAL_param1_EXISTS 1
#define DT_N_S_keymap_S_mac_layer_P_bindings_LEN 43
#define DT_N_S_keymap_S_mac_layer_P_bindings_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	34, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Special property macros: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	6, /* /soc/gpio@50000000 */ \
	33, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_NODELABEL_blue_led DT_N_S_leds_S_led_0

/* Special property macros: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_50000000
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 15
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "Blue LED"
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /soc/adc@40007000
 *
 * Node identifier: DT_N_S_soc_S_adc_40007000
 *
 * Binding (compatible = nordic,nrf-saadc):
 *   $ZEPHYR_BASE/dts/bindings/adc/nordic,nrf-saadc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40007000_PATH "/soc/adc@40007000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40007000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_adc_40007000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40007000_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40007000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40007000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40007000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_saadc DT_N_S_soc_S_adc_40007000
#define DT_N_NODELABEL_adc           DT_N_S_soc_S_adc_40007000

/* Special property macros: */
#define DT_N_S_soc_S_adc_40007000_REG_NUM 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_ADDRESS 1073770496 /* 0x40007000 */
#define DT_N_S_soc_S_adc_40007000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_40007000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_adc_40007000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_COMPAT_MATCHES_nordic_nrf_saadc 1
#define DT_N_S_soc_S_adc_40007000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40007000_P_reg {1073770496 /* 0x40007000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0 1073770496
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_40007000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts {7 /* 0x7 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_label "ADC_0"
#define DT_N_S_soc_S_adc_40007000_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_status "okay"
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_40007000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_40007000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible {"nordic,nrf-saadc"}
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0 "nordic,nrf-saadc"
#define DT_N_S_soc_S_adc_40007000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40007000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/clock@40000000
 *
 * Node identifier: DT_N_S_soc_S_clock_40000000
 *
 * Binding (compatible = nordic,nrf-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/nordic,nrf-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_40000000_PATH "/soc/clock@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_40000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_clock_40000000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_40000000_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_40000000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_40000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_40000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_clock DT_N_S_soc_S_clock_40000000
#define DT_N_NODELABEL_clock         DT_N_S_soc_S_clock_40000000

/* Special property macros: */
#define DT_N_S_soc_S_clock_40000000_REG_NUM 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_clock_40000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_clock_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_COMPAT_MATCHES_nordic_nrf_clock 1
#define DT_N_S_soc_S_clock_40000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_clock_40000000_P_label "CLOCK"
#define DT_N_S_soc_S_clock_40000000_P_label_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg {1073741824 /* 0x40000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_clock_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts {0 /* 0x0 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_status "okay"
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible {"nordic,nrf-clock"}
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0 "nordic,nrf-clock"
#define DT_N_S_soc_S_clock_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_40000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/ecb@4000e000
 *
 * Node identifier: DT_N_S_soc_S_ecb_4000e000
 *
 * Binding (compatible = nordic,nrf-ecb):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ecb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecb_4000e000_PATH "/soc/ecb@4000e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ecb_4000e000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_ecb_4000e000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecb_4000e000_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecb_4000e000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecb_4000e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecb_4000e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ecb DT_N_S_soc_S_ecb_4000e000
#define DT_N_NODELABEL_ecb         DT_N_S_soc_S_ecb_4000e000

/* Special property macros: */
#define DT_N_S_soc_S_ecb_4000e000_REG_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_ADDRESS 1073799168 /* 0x4000e000 */
#define DT_N_S_soc_S_ecb_4000e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ecb_4000e000_IRQ_NUM 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ecb_4000e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_COMPAT_MATCHES_nordic_nrf_ecb 1
#define DT_N_S_soc_S_ecb_4000e000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_ecb_4000e000_P_reg {1073799168 /* 0x4000e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0 1073799168
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ecb_4000e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts {14 /* 0xe */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_status "okay"
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ecb_4000e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4000e000_P_status_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible {"nordic,nrf-ecb"}
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0 "nordic,nrf-ecb"
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_LEN 1
#define DT_N_S_soc_S_ecb_4000e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ecb_4000e000_P_label "ECB"
#define DT_N_S_soc_S_ecb_4000e000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/ficr@10000000
 *
 * Node identifier: DT_N_S_soc_S_ficr_10000000
 *
 * Binding (compatible = nordic,nrf-ficr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-ficr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ficr_10000000_PATH "/soc/ficr@10000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ficr_10000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_ficr_10000000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ficr_10000000_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ficr_10000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ficr_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ficr_10000000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ficr DT_N_S_soc_S_ficr_10000000
#define DT_N_NODELABEL_ficr         DT_N_S_soc_S_ficr_10000000

/* Special property macros: */
#define DT_N_S_soc_S_ficr_10000000_REG_NUM 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_ficr_10000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ficr_10000000_IRQ_NUM 0
#define DT_N_S_soc_S_ficr_10000000_COMPAT_MATCHES_nordic_nrf_ficr 1
#define DT_N_S_soc_S_ficr_10000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_ficr_10000000_P_reg {268435456 /* 0x10000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0 268435456
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ficr_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_status "okay"
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ficr_10000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_10000000_P_status_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible {"nordic,nrf-ficr"}
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0 "nordic,nrf-ficr"
#define DT_N_S_soc_S_ficr_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_LEN 1
#define DT_N_S_soc_S_ficr_10000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/gpiote@40006000
 *
 * Node identifier: DT_N_S_soc_S_gpiote_40006000
 *
 * Binding (compatible = nordic,nrf-gpiote):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpiote.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpiote_40006000_PATH "/soc/gpiote@40006000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpiote_40006000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpiote_40006000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpiote_40006000_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpiote_40006000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpiote_40006000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpiote_40006000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpiote DT_N_S_soc_S_gpiote_40006000
#define DT_N_NODELABEL_gpiote         DT_N_S_soc_S_gpiote_40006000

/* Special property macros: */
#define DT_N_S_soc_S_gpiote_40006000_REG_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_ADDRESS 1073766400 /* 0x40006000 */
#define DT_N_S_soc_S_gpiote_40006000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpiote_40006000_IRQ_NUM 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_gpiote_40006000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_COMPAT_MATCHES_nordic_nrf_gpiote 1
#define DT_N_S_soc_S_gpiote_40006000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_gpiote_40006000_P_reg {1073766400 /* 0x40006000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0 1073766400
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpiote_40006000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts {6 /* 0x6 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_label "GPIOTE_0"
#define DT_N_S_soc_S_gpiote_40006000_P_label_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_status "okay"
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpiote_40006000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_40006000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible {"nordic,nrf-gpiote"}
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0 "nordic,nrf-gpiote"
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpiote_40006000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40003000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40003000
 *
 * Binding (compatible = nordic,nrf-twi):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40003000_PATH "/soc/i2c@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40003000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40003000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40003000_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40003000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twi   DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_i2c0          DT_N_S_soc_S_i2c_40003000
#define DT_N_NODELABEL_pro_micro_i2c DT_N_S_soc_S_i2c_40003000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40003000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_i2c_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_COMPAT_MATCHES_nordic_nrf_twi 1
#define DT_N_S_soc_S_i2c_40003000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_sda_pin 17
#define DT_N_S_soc_S_i2c_40003000_P_sda_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_scl_pin 20
#define DT_N_S_soc_S_i2c_40003000_P_scl_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40003000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_label "I2C_0"
#define DT_N_S_soc_S_i2c_40003000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible {"nordic,nrf-twi"}
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0 "nordic,nrf-twi"
#define DT_N_S_soc_S_i2c_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40003000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40004000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40004000
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40004000_PATH "/soc/i2c@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40004000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40004000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40004000_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40004000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40004000_EXISTS 1
#define DT_N_NODELABEL_i2c1 DT_N_S_soc_S_i2c_40004000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40004000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_i2c_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40004000_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_40004000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Special property macros: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4001c000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4001c000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4001c000_PATH "/soc/pwm@4001c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4001c000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pwm_4001c000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4001c000_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4001c000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4001c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4001c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pwm DT_N_S_soc_S_pwm_4001c000
#define DT_N_NODELABEL_pwm0        DT_N_S_soc_S_pwm_4001c000

/* Special property macros: */
#define DT_N_S_soc_S_pwm_4001c000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_ADDRESS 1073856512 /* 0x4001c000 */
#define DT_N_S_soc_S_pwm_4001c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4001c000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4001c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4001c000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4001c000_P_reg {1073856512 /* 0x4001c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0 1073856512
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4001c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4001c000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_ch0_inverted 0
#define DT_N_S_soc_S_pwm_4001c000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_ch1_inverted 0
#define DT_N_S_soc_S_pwm_4001c000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_ch2_inverted 0
#define DT_N_S_soc_S_pwm_4001c000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_ch3_inverted 0
#define DT_N_S_soc_S_pwm_4001c000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_label "PWM_0"
#define DT_N_S_soc_S_pwm_4001c000_P_label_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4001c000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4001c000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4001c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts {28 /* 0x1c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4001c000_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40021000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40021000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40021000_PATH "/soc/pwm@40021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40021000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pwm_40021000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40021000_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40021000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40021000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_pwm DT_N_S_soc_S_pwm_40021000
#define DT_N_NODELABEL_pwm1        DT_N_S_soc_S_pwm_40021000

/* Special property macros: */
#define DT_N_S_soc_S_pwm_40021000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pwm_40021000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40021000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40021000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40021000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40021000_P_reg {1073876992 /* 0x40021000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40021000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_ch0_inverted 0
#define DT_N_S_soc_S_pwm_40021000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_ch1_inverted 0
#define DT_N_S_soc_S_pwm_40021000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_ch2_inverted 0
#define DT_N_S_soc_S_pwm_40021000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_ch3_inverted 0
#define DT_N_S_soc_S_pwm_40021000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_label "PWM_1"
#define DT_N_S_soc_S_pwm_40021000_P_label_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40021000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40021000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts {33 /* 0x21 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40021000_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40022000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40022000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40022000_PATH "/soc/pwm@40022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40022000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pwm_40022000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40022000_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40022000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40022000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_pwm DT_N_S_soc_S_pwm_40022000
#define DT_N_NODELABEL_pwm2        DT_N_S_soc_S_pwm_40022000

/* Special property macros: */
#define DT_N_S_soc_S_pwm_40022000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_pwm_40022000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40022000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_40022000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_40022000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40022000_P_reg {1073881088 /* 0x40022000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_40022000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_ch0_inverted 0
#define DT_N_S_soc_S_pwm_40022000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_ch1_inverted 0
#define DT_N_S_soc_S_pwm_40022000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_ch2_inverted 0
#define DT_N_S_soc_S_pwm_40022000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_ch3_inverted 0
#define DT_N_S_soc_S_pwm_40022000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_label "PWM_2"
#define DT_N_S_soc_S_pwm_40022000_P_label_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40022000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40022000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts {34 /* 0x22 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40022000_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/pwm@4002d000
 *
 * Node identifier: DT_N_S_soc_S_pwm_4002d000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_4002d000_PATH "/soc/pwm@4002d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_4002d000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pwm_4002d000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_4002d000_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_4002d000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_4002d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_4002d000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_pwm DT_N_S_soc_S_pwm_4002d000
#define DT_N_NODELABEL_pwm3        DT_N_S_soc_S_pwm_4002d000

/* Special property macros: */
#define DT_N_S_soc_S_pwm_4002d000_REG_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_ADDRESS 1073926144 /* 0x4002d000 */
#define DT_N_S_soc_S_pwm_4002d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_4002d000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_pwm_4002d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_pwm_4002d000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_4002d000_P_reg {1073926144 /* 0x4002d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0 1073926144
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_4002d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned 0
#define DT_N_S_soc_S_pwm_4002d000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_ch0_inverted 0
#define DT_N_S_soc_S_pwm_4002d000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_ch1_inverted 0
#define DT_N_S_soc_S_pwm_4002d000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_ch2_inverted 0
#define DT_N_S_soc_S_pwm_4002d000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_ch3_inverted 0
#define DT_N_S_soc_S_pwm_4002d000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_label "PWM_3"
#define DT_N_S_soc_S_pwm_4002d000_P_label_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_status "disabled"
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_4002d000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_4002d000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_4002d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts {45 /* 0x2d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_4002d000_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/qdec@40012000
 *
 * Node identifier: DT_N_S_soc_S_qdec_40012000
 *
 * Binding (compatible = nordic,nrf-qdec):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-qdec.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qdec_40012000_PATH "/soc/qdec@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qdec_40012000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_qdec_40012000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qdec_40012000_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qdec_40012000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qdec_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qdec_40012000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qdec DT_N_S_soc_S_qdec_40012000
#define DT_N_NODELABEL_qdec         DT_N_S_soc_S_qdec_40012000

/* Special property macros: */
#define DT_N_S_soc_S_qdec_40012000_REG_NUM 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_qdec_40012000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qdec_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qdec_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_COMPAT_MATCHES_nordic_nrf_qdec 1
#define DT_N_S_soc_S_qdec_40012000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_qdec_40012000_P_reg {1073815552 /* 0x40012000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qdec_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts {18 /* 0x12 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_label "QDEC"
#define DT_N_S_soc_S_qdec_40012000_P_label_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_status "disabled"
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qdec_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qdec_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible {"nordic,nrf-qdec"}
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0 "nordic,nrf-qdec"
#define DT_N_S_soc_S_qdec_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_qdec_40012000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/qspi@40029000
 *
 * Node identifier: DT_N_S_soc_S_qspi_40029000
 *
 * Binding (compatible = nordic,nrf-qspi):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf-qspi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_qspi_40029000_PATH "/soc/qspi@40029000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_qspi_40029000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_qspi_40029000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_qspi_40029000_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_qspi_40029000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_qspi_40029000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_qspi_40029000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_qspi DT_N_S_soc_S_qspi_40029000
#define DT_N_NODELABEL_qspi         DT_N_S_soc_S_qspi_40029000

/* Special property macros: */
#define DT_N_S_soc_S_qspi_40029000_REG_NUM 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_ADDRESS 1073909760 /* 0x40029000 */
#define DT_N_S_soc_S_qspi_40029000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_qspi_40029000_IRQ_NUM 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_qspi_40029000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_COMPAT_MATCHES_nordic_nrf_qspi 1
#define DT_N_S_soc_S_qspi_40029000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_qspi_40029000_P_interrupts {41 /* 0x29 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_label "QSPI"
#define DT_N_S_soc_S_qspi_40029000_P_label_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg {1073909760 /* 0x40029000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0 1073909760
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_qspi_40029000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_reg_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_status "disabled"
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_qspi_40029000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_qspi_40029000_P_status_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible {"nordic,nrf-qspi"}
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0 "nordic,nrf-qspi"
#define DT_N_S_soc_S_qspi_40029000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_LEN 1
#define DT_N_S_soc_S_qspi_40029000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/random@4000d000
 *
 * Node identifier: DT_N_S_soc_S_random_4000d000
 *
 * Binding (compatible = nordic,nrf-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/nordic,nrf-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_4000d000_PATH "/soc/random@4000d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_4000d000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_random_4000d000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_4000d000_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_4000d000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_4000d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_4000d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rng DT_N_S_soc_S_random_4000d000
#define DT_N_NODELABEL_rng         DT_N_S_soc_S_random_4000d000

/* Special property macros: */
#define DT_N_S_soc_S_random_4000d000_REG_NUM 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_ADDRESS 1073795072 /* 0x4000d000 */
#define DT_N_S_soc_S_random_4000d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_random_4000d000_IRQ_NUM 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_random_4000d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_COMPAT_MATCHES_nordic_nrf_rng 1
#define DT_N_S_soc_S_random_4000d000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_random_4000d000_P_reg {1073795072 /* 0x4000d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0 1073795072
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_random_4000d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts {13 /* 0xd */, 1 /* 0x1 */}
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_status "okay"
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_random_4000d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_4000d000_P_status_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible {"nordic,nrf-rng"}
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0 "nordic,nrf-rng"
#define DT_N_S_soc_S_random_4000d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_LEN 1
#define DT_N_S_soc_S_random_4000d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_4000d000_P_label "RNG"
#define DT_N_S_soc_S_random_4000d000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/rtc@4000b000
 *
 * Node identifier: DT_N_S_soc_S_rtc_4000b000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_4000b000_PATH "/soc/rtc@4000b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_4000b000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_4000b000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_4000b000_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_4000b000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_4000b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_4000b000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rtc DT_N_S_soc_S_rtc_4000b000
#define DT_N_NODELABEL_rtc0        DT_N_S_soc_S_rtc_4000b000

/* Special property macros: */
#define DT_N_S_soc_S_rtc_4000b000_REG_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_ADDRESS 1073786880 /* 0x4000b000 */
#define DT_N_S_soc_S_rtc_4000b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_4000b000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_4000b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_4000b000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_4000b000_P_reg {1073786880 /* 0x4000b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0 1073786880
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_4000b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num 3
#define DT_N_S_soc_S_rtc_4000b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_4000b000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_4000b000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_4000b000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_4000b000_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler 1
#define DT_N_S_soc_S_rtc_4000b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_status "okay"
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_4000b000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_4000b000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_4000b000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40011000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40011000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40011000_PATH "/soc/rtc@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40011000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40011000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40011000_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40011000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40011000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_rtc DT_N_S_soc_S_rtc_40011000
#define DT_N_NODELABEL_rtc1        DT_N_S_soc_S_rtc_40011000

/* Special property macros: */
#define DT_N_S_soc_S_rtc_40011000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_rtc_40011000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40011000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40011000_P_reg {1073811456 /* 0x40011000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40011000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40011000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40011000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40011000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_label "RTC_1"
#define DT_N_S_soc_S_rtc_40011000_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40011000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_status "okay"
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40011000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40011000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40024000
 *
 * Node identifier: DT_N_S_soc_S_rtc_40024000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40024000_PATH "/soc/rtc@40024000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40024000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40024000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40024000_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40024000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40024000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_rtc DT_N_S_soc_S_rtc_40024000
#define DT_N_NODELABEL_rtc2        DT_N_S_soc_S_rtc_40024000

/* Special property macros: */
#define DT_N_S_soc_S_rtc_40024000_REG_NUM 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_ADDRESS 1073889280 /* 0x40024000 */
#define DT_N_S_soc_S_rtc_40024000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_40024000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_40024000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_40024000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40024000_P_reg {1073889280 /* 0x40024000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0 1073889280
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_40024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_cc_num 4
#define DT_N_S_soc_S_rtc_40024000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_40024000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_40024000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_40024000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_label "RTC_2"
#define DT_N_S_soc_S_rtc_40024000_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts {36 /* 0x24 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler 1
#define DT_N_S_soc_S_rtc_40024000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_status "okay"
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40024000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40024000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_40024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40024000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003000
 *
 * Node identifier: DT_N_S_soc_S_spi_40003000
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003000_PATH "/soc/spi@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40003000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003000_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003000_EXISTS 1
#define DT_N_NODELABEL_spi0          DT_N_S_soc_S_spi_40003000
#define DT_N_NODELABEL_pro_micro_spi DT_N_S_soc_S_spi_40003000

/* Special property macros: */
#define DT_N_S_soc_S_spi_40003000_REG_NUM 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_spi_40003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003000_P_reg {1073754112 /* 0x40003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_status "disabled"
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003000_P_label "SPI_0"
#define DT_N_S_soc_S_spi_40003000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/spi@40004000
 *
 * Node identifier: DT_N_S_soc_S_spi_40004000
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40004000_PATH "/soc/spi@40004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40004000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40004000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40004000_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40004000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40004000_EXISTS 1
#define DT_N_NODELABEL_spi1 DT_N_S_soc_S_spi_40004000

/* Special property macros: */
#define DT_N_S_soc_S_spi_40004000_REG_NUM 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_ADDRESS 1073758208 /* 0x40004000 */
#define DT_N_S_soc_S_spi_40004000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40004000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40004000_P_reg {1073758208 /* 0x40004000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0 1073758208
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts {4 /* 0x4 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_status "disabled"
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40004000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40004000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40004000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_40004000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/spi@40023000
 *
 * Node identifier: DT_N_S_soc_S_spi_40023000
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40023000_PATH "/soc/spi@40023000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40023000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40023000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40023000_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40023000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40023000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40023000_EXISTS 1
#define DT_N_NODELABEL_spi2 DT_N_S_soc_S_spi_40023000

/* Special property macros: */
#define DT_N_S_soc_S_spi_40023000_REG_NUM 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_ADDRESS 1073885184 /* 0x40023000 */
#define DT_N_S_soc_S_spi_40023000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40023000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_40023000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40023000_P_reg {1073885184 /* 0x40023000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0 1073885184
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40023000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts {35 /* 0x23 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_status "disabled"
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40023000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40023000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40023000_P_label "SPI_2"
#define DT_N_S_soc_S_spi_40023000_P_label_EXISTS 1

/*
 * Devicetree node: /soc/spi@4002f000
 *
 * Node identifier: DT_N_S_soc_S_spi_4002f000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4002f000_PATH "/soc/spi@4002f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4002f000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_4002f000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4002f000_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4002f000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4002f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4002f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spim DT_N_S_soc_S_spi_4002f000
#define DT_N_NODELABEL_spi3         DT_N_S_soc_S_spi_4002f000

/* Special property macros: */
#define DT_N_S_soc_S_spi_4002f000_REG_NUM 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_ADDRESS 1073934336 /* 0x4002f000 */
#define DT_N_S_soc_S_spi_4002f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_4002f000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_4002f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_4002f000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4002f000_P_miso_pull_up 0
#define DT_N_S_soc_S_spi_4002f000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_miso_pull_down 0
#define DT_N_S_soc_S_spi_4002f000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg {1073934336 /* 0x4002f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0 1073934336
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_4002f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts {47 /* 0x2f */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_label "SPI_3"
#define DT_N_S_soc_S_spi_4002f000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_status "disabled"
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_4002f000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_4002f000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_4002f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_4002f000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/temp@4000c000
 *
 * Node identifier: DT_N_S_soc_S_temp_4000c000
 *
 * Binding (compatible = nordic,nrf-temp):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_temp_4000c000_PATH "/soc/temp@4000c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_temp_4000c000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_temp_4000c000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_temp_4000c000_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_temp_4000c000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_temp_4000c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_temp_4000c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_temp DT_N_S_soc_S_temp_4000c000
#define DT_N_NODELABEL_temp         DT_N_S_soc_S_temp_4000c000

/* Special property macros: */
#define DT_N_S_soc_S_temp_4000c000_REG_NUM 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_ADDRESS 1073790976 /* 0x4000c000 */
#define DT_N_S_soc_S_temp_4000c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_temp_4000c000_IRQ_NUM 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_temp_4000c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_COMPAT_MATCHES_nordic_nrf_temp 1
#define DT_N_S_soc_S_temp_4000c000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_temp_4000c000_P_reg {1073790976 /* 0x4000c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0 1073790976
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_temp_4000c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts {12 /* 0xc */, 1 /* 0x1 */}
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_label "TEMP_0"
#define DT_N_S_soc_S_temp_4000c000_P_label_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_status "okay"
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_temp_4000c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_4000c000_P_status_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible {"nordic,nrf-temp"}
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0 "nordic,nrf-temp"
#define DT_N_S_soc_S_temp_4000c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_LEN 1
#define DT_N_S_soc_S_temp_4000c000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timer@40008000
 *
 * Node identifier: DT_N_S_soc_S_timer_40008000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40008000_PATH "/soc/timer@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40008000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_40008000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40008000_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40008000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40008000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_timer DT_N_S_soc_S_timer_40008000
#define DT_N_NODELABEL_timer0        DT_N_S_soc_S_timer_40008000

/* Special property macros: */
#define DT_N_S_soc_S_timer_40008000_REG_NUM 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_timer_40008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40008000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40008000_P_reg {1073774592 /* 0x40008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_cc_num 4
#define DT_N_S_soc_S_timer_40008000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_label "TIMER_0"
#define DT_N_S_soc_S_timer_40008000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_prescaler 0
#define DT_N_S_soc_S_timer_40008000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_status "okay"
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40008000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40008000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timer@40009000
 *
 * Node identifier: DT_N_S_soc_S_timer_40009000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40009000_PATH "/soc/timer@40009000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40009000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_40009000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40009000_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40009000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40009000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40009000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_timer DT_N_S_soc_S_timer_40009000
#define DT_N_NODELABEL_timer1        DT_N_S_soc_S_timer_40009000

/* Special property macros: */
#define DT_N_S_soc_S_timer_40009000_REG_NUM 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_ADDRESS 1073778688 /* 0x40009000 */
#define DT_N_S_soc_S_timer_40009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40009000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_40009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_40009000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40009000_P_reg {1073778688 /* 0x40009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0 1073778688
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_cc_num 4
#define DT_N_S_soc_S_timer_40009000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_label "TIMER_1"
#define DT_N_S_soc_S_timer_40009000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_prescaler 0
#define DT_N_S_soc_S_timer_40009000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_status "okay"
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40009000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40009000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_40009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40009000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001a000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001a000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001a000_PATH "/soc/timer@4001a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001a000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_4001a000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001a000_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001a000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001a000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_timer DT_N_S_soc_S_timer_4001a000
#define DT_N_NODELABEL_timer3        DT_N_S_soc_S_timer_4001a000

/* Special property macros: */
#define DT_N_S_soc_S_timer_4001a000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_ADDRESS 1073848320 /* 0x4001a000 */
#define DT_N_S_soc_S_timer_4001a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001a000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001a000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001a000_P_reg {1073848320 /* 0x4001a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0 1073848320
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001a000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts {26 /* 0x1a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_label "TIMER_3"
#define DT_N_S_soc_S_timer_4001a000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001a000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_status "okay"
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_4001a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4001a000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001a000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timer@4001b000
 *
 * Node identifier: DT_N_S_soc_S_timer_4001b000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4001b000_PATH "/soc/timer@4001b000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4001b000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_4001b000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4001b000_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4001b000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4001b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4001b000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_timer DT_N_S_soc_S_timer_4001b000
#define DT_N_NODELABEL_timer4        DT_N_S_soc_S_timer_4001b000

/* Special property macros: */
#define DT_N_S_soc_S_timer_4001b000_REG_NUM 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_ADDRESS 1073852416 /* 0x4001b000 */
#define DT_N_S_soc_S_timer_4001b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4001b000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4001b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4001b000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4001b000_P_reg {1073852416 /* 0x4001b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0 1073852416
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4001b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_cc_num 6
#define DT_N_S_soc_S_timer_4001b000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts {27 /* 0x1b */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_label "TIMER_4"
#define DT_N_S_soc_S_timer_4001b000_P_label_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_prescaler 0
#define DT_N_S_soc_S_timer_4001b000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_status "okay"
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_4001b000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_4001b000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4001b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4001b000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Special property macros: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1

/*
 * Devicetree node: /soc/uart@40002000
 *
 * Node identifier: DT_N_S_soc_S_uart_40002000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40002000_PATH "/soc/uart@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40002000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_40002000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40002000_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40002000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40002000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uarte    DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_uart0            DT_N_S_soc_S_uart_40002000
#define DT_N_NODELABEL_pro_micro_serial DT_N_S_soc_S_uart_40002000

/* Special property macros: */
#define DT_N_S_soc_S_uart_40002000_REG_NUM 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_uart_40002000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40002000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40002000_P_reg {1073750016 /* 0x40002000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts {2 /* 0x2 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_tx_pin 6
#define DT_N_S_soc_S_uart_40002000_P_tx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_rx_pin 8
#define DT_N_S_soc_S_uart_40002000_P_rx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_label "UART_0"
#define DT_N_S_soc_S_uart_40002000_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40002000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_status "disabled"
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40002000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/uart@40028000
 *
 * Node identifier: DT_N_S_soc_S_uart_40028000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40028000_PATH "/soc/uart@40028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40028000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_40028000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40028000_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40028000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40028000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_uarte DT_N_S_soc_S_uart_40028000
#define DT_N_NODELABEL_uart1         DT_N_S_soc_S_uart_40028000

/* Special property macros: */
#define DT_N_S_soc_S_uart_40028000_REG_NUM 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_uart_40028000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_40028000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40028000_P_reg {1073905664 /* 0x40028000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts {40 /* 0x28 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_label "UART_1"
#define DT_N_S_soc_S_uart_40028000_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40028000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_status "disabled"
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40028000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40028000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/uicr@10001000
 *
 * Node identifier: DT_N_S_soc_S_uicr_10001000
 *
 * Binding (compatible = nordic,nrf-uicr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-uicr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uicr_10001000_PATH "/soc/uicr@10001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uicr_10001000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uicr_10001000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uicr_10001000_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uicr_10001000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uicr_10001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uicr_10001000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uicr DT_N_S_soc_S_uicr_10001000
#define DT_N_NODELABEL_uicr         DT_N_S_soc_S_uicr_10001000

/* Special property macros: */
#define DT_N_S_soc_S_uicr_10001000_REG_NUM 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_ADDRESS 268439552 /* 0x10001000 */
#define DT_N_S_soc_S_uicr_10001000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uicr_10001000_IRQ_NUM 0
#define DT_N_S_soc_S_uicr_10001000_COMPAT_MATCHES_nordic_nrf_uicr 1
#define DT_N_S_soc_S_uicr_10001000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_uicr_10001000_P_reg {268439552 /* 0x10001000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0 268439552
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uicr_10001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_status "okay"
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uicr_10001000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_10001000_P_status_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible {"nordic,nrf-uicr"}
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0 "nordic,nrf-uicr"
#define DT_N_S_soc_S_uicr_10001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_LEN 1
#define DT_N_S_soc_S_uicr_10001000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40010000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40010000
 *
 * Binding (compatible = nordic,nrf-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/nordic,nrf-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40010000_PATH "/soc/watchdog@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40010000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_40010000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40010000_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40010000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40010000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_watchdog DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt              DT_N_S_soc_S_watchdog_40010000
#define DT_N_NODELABEL_wdt0             DT_N_S_soc_S_watchdog_40010000

/* Special property macros: */
#define DT_N_S_soc_S_watchdog_40010000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_watchdog_40010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_40010000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_watchdog_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_COMPAT_MATCHES_nordic_nrf_watchdog 1
#define DT_N_S_soc_S_watchdog_40010000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40010000_P_reg {1073807360 /* 0x40010000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_label "WDT"
#define DT_N_S_soc_S_watchdog_40010000_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts {16 /* 0x10 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40010000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible {"nordic,nrf-watchdog"}
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0 "nordic,nrf-watchdog"
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40010000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/crypto@5002a000
 *
 * Node identifier: DT_N_S_soc_S_crypto_5002a000
 *
 * Binding (compatible = nordic,nrf-cc310):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-cc310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_5002a000_PATH "/soc/crypto@5002a000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_crypto_5002a000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_crypto_5002a000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_5002a000_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_5002a000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_5002a000_SUPPORTS_ORDS \
	68, /* /soc/crypto@5002a000/crypto@5002b000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_5002a000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_cc310 DT_N_S_soc_S_crypto_5002a000
#define DT_N_NODELABEL_cryptocell    DT_N_S_soc_S_crypto_5002a000

/* Special property macros: */
#define DT_N_S_soc_S_crypto_5002a000_REG_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_ADDRESS 1342349312 /* 0x5002a000 */
#define DT_N_S_soc_S_crypto_5002a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_IRQ_NUM 0
#define DT_N_S_soc_S_crypto_5002a000_COMPAT_MATCHES_nordic_nrf_cc310 1
#define DT_N_S_soc_S_crypto_5002a000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_5002a000_P_reg {1342349312 /* 0x5002a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0 1342349312
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_5002a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_label "CRYPTOCELL"
#define DT_N_S_soc_S_crypto_5002a000_P_label_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_status "okay"
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_crypto_5002a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_crypto_5002a000_P_status_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible {"nordic,nrf-cc310"}
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0 "nordic,nrf-cc310"
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/crypto@5002a000/crypto@5002b000
 *
 * Node identifier: DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000
 *
 * Binding (compatible = arm,cryptocell-310):
 *   $ZEPHYR_BASE/dts/bindings/crypto/arm,cryptocell-310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_PATH "/soc/crypto@5002a000/crypto@5002b000"

/* Node parent (/soc/crypto@5002a000) identifier: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_PARENT DT_N_S_soc_S_crypto_5002a000
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REQUIRES_ORDS \
	11, /* /soc/interrupt-controller@e000e100 */ \
	67, /* /soc/crypto@5002a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_EXISTS 1
#define DT_N_INST_0_arm_cryptocell_310 DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000
#define DT_N_NODELABEL_cryptocell310   DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000

/* Special property macros: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_VAL_ADDRESS 1342353408 /* 0x5002b000 */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_NUM 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_COMPAT_MATCHES_arm_cryptocell_310 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg {1342353408 /* 0x5002b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_0 1342353408
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_label "CRYPTOCELL310"
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_label_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts {42 /* 0x2a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible {"arm,cryptocell-310"}
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0 "arm,cryptocell-310"
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_LEN 1
#define DT_N_S_soc_S_crypto_5002a000_S_crypto_5002b000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000
 *
 * Binding (compatible = nordic,nrf52-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf52-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_PATH "/soc/flash-controller@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_flash_controller_4001e000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_SUPPORTS_ORDS \
	70, /* /soc/flash-controller@4001e000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf52_flash_controller DT_N_S_soc_S_flash_controller_4001e000
#define DT_N_NODELABEL_flash_controller           DT_N_S_soc_S_flash_controller_4001e000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_flash_controller_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_4001e000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_COMPAT_MATCHES_nordic_nrf52_flash_controller 1
#define DT_N_S_soc_S_flash_controller_4001e000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_P_label "NRF_FLASH_DRV_NAME"
#define DT_N_S_soc_S_flash_controller_4001e000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible {"nordic,nrf52-flash-controller"}
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0 "nordic,nrf52-flash-controller"
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PATH "/soc/flash-controller@4001e000/flash@0"

/* Node parent (/soc/flash-controller@4001e000) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_4001e000
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REQUIRES_ORDS \
	69, /* /soc/flash-controller@4001e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_SUPPORTS_ORDS \
	71, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_4001e000_S_flash_0

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_label "NRF_FLASH"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg {0 /* 0x0 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PATH "/soc/flash-controller@4001e000/flash@0/partitions"

/* Node parent (/soc/flash-controller@4001e000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000) fn(DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REQUIRES_ORDS \
	70, /* /soc/flash-controller@4001e000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	72, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@0 */ \
	73, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@26000 */ \
	74, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000 */ \
	75, /* /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@0"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	71, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_sd_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 155648 /* 0x26000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label "softdevice"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 155648 /* 0x26000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 155648
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@26000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@26000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REQUIRES_ORDS \
	71, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_EXISTS 1
#define DT_N_NODELABEL_code_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_VAL_ADDRESS 155648 /* 0x26000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_REG_IDX_0_VAL_SIZE 811008 /* 0xc6000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_STATUS_okay 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_label "code_partition"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg {155648 /* 0x26000 */, 811008 /* 0xc6000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_0 155648
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_1 811008
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@ec000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@ec000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REQUIRES_ORDS \
	71, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_VAL_ADDRESS 966656 /* 0xec000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_STATUS_okay 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg {966656 /* 0xec000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_0 966656
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@4001e000/flash@0/partitions/partition@f4000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/partition.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PATH "/soc/flash-controller@4001e000/flash@0/partitions/partition@f4000"

/* Node parent (/soc/flash-controller@4001e000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PARENT DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REQUIRES_ORDS \
	71, /* /soc/flash-controller@4001e000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_VAL_ADDRESS 999424 /* 0xf4000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_STATUS_okay 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label "adafruit_boot"
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg {999424 /* 0xf4000 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_0 999424
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000
 *
 * Binding (compatible = nordic,nrf-usbd):
 *   $ZEPHYR_BASE/dts/bindings/usb/nordic,nrf-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_PATH "/soc/usbd@40027000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_40027000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_usbd_40027000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_SUPPORTS_ORDS \
	77, /* /soc/usbd@40027000/cdc_acm_uart */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_usbd DT_N_S_soc_S_usbd_40027000
#define DT_N_NODELABEL_usbd         DT_N_S_soc_S_usbd_40027000

/* Special property macros: */
#define DT_N_S_soc_S_usbd_40027000_REG_NUM 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_ADDRESS 1073901568 /* 0x40027000 */
#define DT_N_S_soc_S_usbd_40027000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_usbd_40027000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_usbd_40027000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_COMPAT_MATCHES_nordic_nrf_usbd 1
#define DT_N_S_soc_S_usbd_40027000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_P_reg {1073901568 /* 0x40027000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0 1073901568
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_usbd_40027000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts {39 /* 0x27 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoin_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_isoout_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints 1
#define DT_N_S_soc_S_usbd_40027000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_in_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints 7
#define DT_N_S_soc_S_usbd_40027000_P_num_out_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_label "USBD"
#define DT_N_S_soc_S_usbd_40027000_P_label_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_status "okay"
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usbd_40027000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_40027000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible {"nordic,nrf-usbd"}
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0 "nordic,nrf-usbd"
#define DT_N_S_soc_S_usbd_40027000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/usbd@40027000/cdc_acm_uart
 *
 * Node identifier: DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_PATH "/soc/usbd@40027000/cdc_acm_uart"

/* Node parent (/soc/usbd@40027000) identifier: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_PARENT DT_N_S_soc_S_usbd_40027000
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_REQUIRES_ORDS \
	76, /* /soc/usbd@40027000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_EXISTS 1
#define DT_N_INST_0_zephyr_cdc_acm_uart DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
#define DT_N_NODELABEL_cdc_acm_uart     DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart

/* Special property macros: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_REG_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_IRQ_NUM 0
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_COMPAT_MATCHES_zephyr_cdc_acm_uart 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible {"zephyr,cdc-acm-uart"}
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0 "zephyr,cdc-acm-uart"
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_label "CDC_ACM_0"
#define DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart_P_label_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_random_4000d000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_4001e000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_4001e000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_usbd_40027000_S_cdc_acm_uart
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zmk_kscan                      DT_N_S_kscan
#define DT_CHOSEN_zmk_kscan_EXISTS               1
#define DT_CHOSEN_zmk_matrix_transform           DT_N_S_keymap_transform_0
#define DT_CHOSEN_zmk_matrix_transform_EXISTS    1
#define DT_COMPAT_fixed_partitions_LABEL_softdevice DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_softdevice_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_code_partition DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_26000
#define DT_COMPAT_fixed_partitions_LABEL_code_partition_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_ec000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_adafruit_boot DT_N_S_soc_S_flash_controller_4001e000_S_flash_0_S_partitions_S_partition_f4000
#define DT_COMPAT_fixed_partitions_LABEL_adafruit_boot_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_nice_nano 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840_qiaa 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52840 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf52_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_saadc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_clock 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ecb 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpiote 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rng 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rtc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_timer 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_temp 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_usbd 1
#define DT_COMPAT_HAS_OKAY_zephyr_cdc_acm_uart 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_watchdog 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_cc310 1
#define DT_COMPAT_HAS_OKAY_arm_cryptocell_310 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ficr 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uicr 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_arduino_pro_micro 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_zmk_ext_power_generic 1
#define DT_COMPAT_HAS_OKAY_zmk_battery_nrf_vddh 1
#define DT_COMPAT_HAS_OKAY_zmk_matrix_transform 1
#define DT_COMPAT_HAS_OKAY_zmk_kscan_gpio_matrix 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_key_press 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_momentary_layer 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_reset 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_rgb_underglow 1
#define DT_COMPAT_HAS_OKAY_zmk_behavior_ext_power 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_tap 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_press 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_mode_release 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_tap_time 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_control_wait_time 1
#define DT_COMPAT_HAS_OKAY_zmk_macro_pause_for_release 1
#define DT_COMPAT_HAS_OKAY_zmk_keymap 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_nice_nano_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_qiaa_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52840_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_nordic_nrf52_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_saadc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_clock_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ecb_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpiote_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpio_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_rng_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_rtc_NUM_OKAY 3
#define DT_N_INST_nordic_nrf_timer_NUM_OKAY 5
#define DT_N_INST_nordic_nrf_temp_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_usbd_NUM_OKAY 1
#define DT_N_INST_zephyr_cdc_acm_uart_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_watchdog_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_cc310_NUM_OKAY 1
#define DT_N_INST_arm_cryptocell_310_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ficr_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uicr_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_arduino_pro_micro_NUM_OKAY 2
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_zmk_ext_power_generic_NUM_OKAY 1
#define DT_N_INST_zmk_battery_nrf_vddh_NUM_OKAY 1
#define DT_N_INST_zmk_matrix_transform_NUM_OKAY 1
#define DT_N_INST_zmk_kscan_gpio_matrix_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_key_press_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_momentary_layer_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_reset_NUM_OKAY 2
#define DT_N_INST_zmk_behavior_rgb_underglow_NUM_OKAY 1
#define DT_N_INST_zmk_behavior_ext_power_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_tap_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_press_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_mode_release_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_tap_time_NUM_OKAY 1
#define DT_N_INST_zmk_macro_control_wait_time_NUM_OKAY 1
#define DT_N_INST_zmk_macro_pause_for_release_NUM_OKAY 1
#define DT_N_INST_zmk_keymap_NUM_OKAY 1
#define DT_FOREACH_OKAY_INST_nice_nano(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840_qiaa(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf52840(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf52(fn) fn(0)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf52_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_saadc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ecb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpiote(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rtc(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_nordic_nrf_timer(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_nordic_nrf_temp(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zephyr_cdc_acm_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_cc310(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_cryptocell_310(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ficr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uicr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arduino_pro_micro(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_ext_power_generic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_battery_nrf_vddh(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_matrix_transform(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_kscan_gpio_matrix(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_key_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_momentary_layer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_reset(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_zmk_behavior_rgb_underglow(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_behavior_ext_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_tap(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_press(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_mode_release(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_tap_time(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_macro_control_wait_time(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_macro_pause_for_release(fn) fn(0)
#define DT_FOREACH_OKAY_INST_zmk_keymap(fn) fn(0)

/*
 * Bus information for status "okay" nodes of each compatible
 */
